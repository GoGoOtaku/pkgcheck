name: release

on:
  push:
    branches: [deploy]
    tags: [v*]
  workflow_dispatch:

jobs:
  build-sdist:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build ".[test,doc]"

    - name: Test with pytest
      env:
        PY_COLORS: 1 # forcibly enable pytest colors
      run: pytest

    - name: Build sdist
      run: |
        git clean -fxd
        make man
        make sdist

    - name: Output dist file info
      run: |
        tar -ztf dist/*.tar.gz | sort

    - name: Upload sdist artifact
      uses: actions/upload-artifact@v4
      with:
        name: dist-sdist
        path: dist/*.tar.gz


  build-wheel:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, aarch64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: ${{matrix.arch}}

    - name: Build wheels
      uses: joerick/cibuildwheel@v2.16.5
      with:
        output-dir: dist
      env:
        CIBW_ARCHS_LINUX: ${{matrix.arch}}

    - name: Upload wheel artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-wheel-${{matrix.arch}}
        path: dist/*.whl


  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    needs: ["build-sdist", "build-wheel"]
    runs-on: ubuntu-latest
    environment: release

    permissions:
      id-token: write # Used to authenticate to PyPI via OIDC

      contents: write # Used to authenticate github release publish

    steps:
    - uses: actions/download-artifact@v3
      with:
        pattern: dist-*
        path: dist
        merge-multiple: true

    - name: Publish a Python distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*.tar.gz
        fail_on_unmatched_files: true
        draft: true

  build-and-push-docker-image:
    if: startsWith(github.ref, 'refs/tags/')
    needs: ["deploy"]
    runs-on: ubuntu-latest
    environment: release

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scrape build info
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/pkgcore/pkgcheck
          tags: |
            type=semver,pattern={{version}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PKGCHECK_VERSION=${{ env.RELEASE_VERSION }}
